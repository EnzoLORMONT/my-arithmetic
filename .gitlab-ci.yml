stages:
  - test
  - deploy

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

test:
  tags:
    - docker
  stage: test
  image: python:3.10
  script:
    - pip install -r requirements.txt
    - pytest --cov=src --cov-report=html --cov-report=term
  artifacts:
    paths:
      - htmlcov/
  coverage: '/\s+(\d+\%)$/'

deploy_stable:
  tags:
      - docker
  image: python:3.10
  stage: deploy
  script:
    - echo "deployment on stable servers"
    - pip install -r requirements.txt
    - hatch build
    - echo "Contents of dist/:"
    - ls -la dist/
  only:
    - tags

deploy_develop:
    tags:
        - docker
    image: python:3.10
    stage: deploy
    script:
      - echo "deployment on develop servers"
      - pip install -r requirements.txt
      - hatch build
      - echo "Contents of dist/:"
      - ls -la dist/
    only:
      - develop

sync-with-github:
  tags:
    - docker
  image: alpine/git:latest
  before_script:
    - git config --global user.name "${GITLAB_USER_NAME}"
    - git config --global user.email "${GITLAB_USER_EMAIL}"
  script:
    - git remote add github $REMOTE_REPOSITORY_URL
    - git checkout master
    - git pull origin master
    - git pull github master
    - git status
    - git push https://root:$ACCESS_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git HEAD:master
